{"version":3,"sources":["action/actionTypes.js","reducers/initialState.js","reducers/index.js","reducers/loaderReducer.js","reducers/DashboardCourseDataListReducer.js","reducers/DashboardDataListReducer.js","reducers/StateCollegeDataListReducer.js","serviceWorker.js","utils/bemnames.js","components/Layout/Content.js","components/Layout/Footer.js","components/Layout/Header.js","utils/constants.js","components/Layout/MainLayout.js","components/Layout/Sidebar.js","components/PageSpinner.js","App.js","index.js","assets/img/sidebar/sidebar-4.jpg"],"names":["__webpack_require__","d","__webpack_exports__","GLOBAL_LOADER_RES","DO_DASHBOARDDATA","DO_DASHBOARDDATA_RES","DO_DASHBOARDCOURSEDATA","DO_DASHBOARDCOURSEDATA_RES","DO_STATECOLLEGEDATA","DO_STATECOLLEGEDATA_RES","initialState","user","combineReducers","loading","state","arguments","length","undefined","action","type","types","data","form","formReducer","DashboardCourseDataListRes","DashboardDataListRes","StateCollegeDataListRes","Boolean","window","location","hostname","match","namespace","bemNames","create","blockName","block","concat","b","_len","more","Array","_key","classNames","e","className","_len2","_key2","m","_len3","_key3","bem","bn","Content","_ref","Tag","tag","restProps","Object","objectWithoutProperties","classes","react_default","a","createElement","assign","defaultProps","Container","Footer","Navbar","Nav","navbar","NavItem","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isOpenNotificationPopover","isNotificationConfirmed","isOpenUserCardPopover","toggleNotificationPopover","setState","toggleUserCardPopover","handleSidebarControlButton","event","preventDefault","stopPropagation","document","querySelector","classList","toggle","profileViewData","console","log","adminData","JSON","parse","localStorage","getItem","removeItem","href","nextProps","doProfileViewRes","ProfileViewRes","success","datalist","isLoader","light","expand","Button","outline","onClick","index_esm","size","React","Component","NOTIFICATION_SYSTEM_STYLE","NotificationItem","DefaultStyle","display","justifyContent","alignItems","borderRadius","fontSize","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","background","Title","margin","padding","paddingRight","color","fontWeight","MessageWrapper","width","Dismiss","fontFamily","position","opacity","height","textAlign","float","top","right","lineHeight","Action","border","ActionWrapper","MainLayout","handleContentClick","isSidebarOpen","breakpoint","openSidebar","checkBreakpoint","_this2","setTimeout","notificationSystem","openOrClose","add","remove","_this3","children","Layout_Sidebar","Layout_Content","fluid","Layout_Header","Layout_Footer","NotificationSystem_default","dismissible","ref","style","contains","sidebarBackground","backgroundImage","sidebarBgImage","backgroundSize","backgroundRepeat","navItems","to","name","exact","Icon","MdDashboard","Sidebar","isOpenComponents","isOpenContents","isOpenPages","isOpenPaymentComponents","handleClick","prevState","isOpen","defineProperty","Link","vertical","map","_ref2","index","key","es_NavLink","id","NavLink","activeClassName","PageSpinner","_ref$color","Spinner","DashboardPage","lazy","Promise","all","then","bind","StateCollege","App","Fragment","BrowserRouter","Switch","Layout_MainLayout","Suspense","fallback","components_PageSpinner","Route","path","component","Redirect","PureComponent","componentQueries","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","p"],"mappings":"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","file":"static/js/main.30261520.chunk.js","sourcesContent":["export const GLOBAL_LOADER = 'GLOBAL_LOADER';\r\nexport const GLOBAL_LOADER_RES = 'GLOBAL_LOADER_RES';\r\n\r\nexport const DO_DASHBOARDDATA = 'DO_DASHBOARDDATA';\r\nexport const DO_DASHBOARDDATA_RES = 'DO_DASHBOARDDATA_RES';\r\n\r\nexport const DO_DASHBOARDCOURSEDATA = 'DO_DASHBOARDCOURSEDATA';\r\nexport const DO_DASHBOARDCOURSEDATA_RES = 'DO_DASHBOARDCOURSEDATA_RES';\r\n\r\nexport const DO_STATECOLLEGEDATA = 'DO_STATECOLLEGEDATA';\r\nexport const DO_STATECOLLEGEDATA_RES = 'DO_STATECOLLEGEDATA_RES';\r\n\r\n","export default {\r\n    user: [],\r\n}","import {\r\n  combineReducers\r\n} from 'redux';\r\nimport {\r\n  reducer as formReducer\r\n} from 'redux-form';\r\nimport loaderReducer  from './loaderReducer';\r\nimport DashboardDataListReducer from './DashboardDataListReducer';\r\nimport DashboardCourseDataListReducer from './DashboardCourseDataListReducer';\r\nimport StateCollegeDataListReducer from './StateCollegeDataListReducer';\r\n\r\n\r\nexport default combineReducers({\r\n  loading: loaderReducer,\r\n  form: formReducer,\r\n  DashboardCourseDataListRes : DashboardCourseDataListReducer,\r\n  DashboardDataListRes: DashboardDataListReducer,\r\n  StateCollegeDataListRes: StateCollegeDataListReducer,\r\n  \r\n});","import * as types from '../action/actionTypes'; \r\nimport initialState from './initialState';\r\n\r\n\r\n//all the user related reducers here\r\nexport default function (state = initialState.user, action) { //we will change the state = {} soon\r\n  switch(action.type) {\r\n    case types.GLOBAL_LOADER_RES:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}","import * as types from '../action/actionTypes';\r\nimport initialState from './initialState';\r\n\r\n//only user costumerUserAdd\r\nexport default function (state = initialState.user, action) {\r\n  switch (action.type) {\r\n    case types.DO_DASHBOARDCOURSEDATA_RES:\r\n      return action.user\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import * as types from '../action/actionTypes';\r\nimport initialState from './initialState';\r\n\r\n//only user costumerUserAdd\r\nexport default function (state = initialState.user, action) {\r\n  switch (action.type) {\r\n    case types.DO_DASHBOARDDATA_RES:\r\n      return action.user\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import * as types from '../action/actionTypes';\r\nimport initialState from './initialState';\r\n\r\n//only user costumerUserAdd\r\nexport default function (state = initialState.user, action) {\r\n  switch (action.type) {\r\n    case types.DO_STATECOLLEGEDATA_RES:\r\n      return action.user\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import classNames from 'classnames';\r\n\r\nexport const createBEM = namespace => {\r\n  return {\r\n    create: blockName => {\r\n      let block = blockName;\r\n\r\n      if (typeof namespace === 'string') {\r\n        block = `${namespace}-${blockName}`;\r\n      }\r\n\r\n      return {\r\n        b: (...more) => {\r\n          return classNames(block, more);\r\n        },\r\n        e: (className, ...more) => {\r\n          return classNames(`${block}__${className}`, more);\r\n        },\r\n        m: (className, ...more) => {\r\n          return classNames(`${block}--${className}`, more);\r\n        },\r\n      };\r\n    },\r\n  };\r\n};\r\n\r\nexport const bemNames = createBEM('cr');\r\n\r\nexport default bemNames;\r\n","import React from 'react';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Container } from 'reactstrap';\r\n\r\nconst bem = bn.create('content');\r\n\r\nconst Content = ({ tag: Tag, className, ...restProps }) => {\r\n  const classes = bem.b(className);\r\n\r\n  return <Tag className={classes} {...restProps} />;\r\n};\r\n\r\nContent.defaultProps = {\r\n  tag: Container,\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\n\r\nimport { Navbar, Nav, NavItem } from 'reactstrap';\r\n\r\n// import SourceLink from 'components/SourceLink';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Navbar className=\"footer_fixed\">\r\n      <Nav navbar >\r\n        <NavItem className=\"footer_copyright\">\r\n          {/* 2018 Reduction theme, source on <SourceLink>Github</SourceLink> */}\r\n          @ Copyrights Dyonisos 2020. All rights reserved. Designed by EMS\r\n        </NavItem>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// import Avatar from 'components/Avatar';\r\n// import { UserCard } from 'components/Card';\r\n// import Notifications from 'components/Notifications';\r\n// import SearchInput from 'components/SearchInput';\r\n// import { notificationsData } from 'demos/header';\r\n// import withBadge from 'hocs/withBadge';\r\n// import { compose } from 'redux';\r\n// import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport {\r\n  MdClearAll,\r\n  \r\n  // MdHelp,\r\n  // MdInsertChart,\r\n  // MdMessage,\r\n  // MdNotificationsActive,\r\n  // MdNotificationsNone,\r\n  \r\n  // MdSettingsApplications,\r\n} from 'react-icons/md';\r\n// MdPersonPin,\r\n//   MdVpnKey,\r\n// MdExitToApp,\r\nimport {\r\n  Button,\r\n  \r\n  // NavbarToggler,\r\n  Nav,\r\n  Navbar,\r\n  NavItem,\r\n  \r\n} from 'reactstrap';\r\n// NavLink,\r\n//   Popover,\r\n//   PopoverBody,\r\n// ListGroup,\r\n//   ListGroupItem,\r\nimport bn from 'utils/bemnames';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// import PropTypes from 'prop-types';\r\n// import { createStructuredSelector } from 'reselect';\r\n// import {ProfileView, doProfileViewRes} from '../../action/ProfileViewActions';\r\n// import firstProfile from 'assets/img/profile/demo.png';\r\n\r\nconst bem = bn.create('header');\r\n\r\n// const MdNotificationsActiveWithBadge = withBadge({\r\n//   size: 'md',\r\n//   color: 'primary',\r\n//   style: {\r\n//     top: -10,\r\n//     right: -10,\r\n//     display: 'inline-flex',\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   children: <small>5</small>,\r\n// })(MdNotificationsActive);\r\n\r\nclass Header extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      profileViewData : undefined\r\n    }\r\n  }\r\n  state = {\r\n    isOpenNotificationPopover: false,\r\n    isNotificationConfirmed: false,\r\n    isOpenUserCardPopover: false,\r\n  };\r\n\r\n  componentDidMount(){\r\n    console.log(this.props)\r\n    console.log('header', this.state.adminData)\r\n    this.setState({\r\n      profileViewData:JSON.parse(localStorage.getItem('managerAdminData'))\r\n    })\r\n  }\r\n\r\n  toggleNotificationPopover = () => {\r\n    this.setState({\r\n      isOpenNotificationPopover: !this.state.isOpenNotificationPopover,\r\n    });\r\n\r\n    if (!this.state.isNotificationConfirmed) {\r\n      this.setState({ isNotificationConfirmed: true });\r\n    }\r\n  };\r\n\r\n  toggleUserCardPopover = () => {\r\n    this.setState({\r\n      isOpenUserCardPopover: !this.state.isOpenUserCardPopover,\r\n    });\r\n  };\r\n\r\n  handleSidebarControlButton = event => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    document.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\r\n  };\r\n\r\n  logOut() {\r\n    \r\n    // localStorage.clear();\r\n    localStorage.removeItem('auth_token')\r\n    localStorage.removeItem('managerName')\r\n    localStorage.removeItem('managerId')\r\n    localStorage.removeItem('managerAdminData')\r\n    window.location.href = '/';\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.doProfileViewRes && nextProps.doProfileViewRes.user){\r\n      if(nextProps.doProfileViewRes.user && nextProps.doProfileViewRes.user.ProfileViewRes){\r\n        if(nextProps.doProfileViewRes.user.ProfileViewRes && nextProps.doProfileViewRes.user.ProfileViewRes.success === true){\r\n          if(nextProps.doProfileViewRes.user.ProfileViewRes.datalist){\r\n            this.setState({\r\n              isLoader: false,\r\n              profileViewData : nextProps.doProfileViewRes.user.ProfileViewRes.datalist,              \r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const { isNotificationConfirmed } = this.state;\r\n    return (\r\n      <Navbar light expand className={bem.b('bg-white')}>\r\n        <Nav navbar className=\"mr-2\">\r\n          <Button outline onClick={this.handleSidebarControlButton}>\r\n            <MdClearAll size={25} />\r\n          </Button>\r\n        </Nav>\r\n        {/* <Nav navbar>\r\n          <SearchInput />\r\n        </Nav> */}\r\n\r\n        <Nav navbar className={bem.e('nav-right')}>\r\n          {/* <NavItem className=\"d-inline-flex\">\r\n            <NavLink id=\"Popover1\" className=\"position-relative\">\r\n              {isNotificationConfirmed ? (\r\n                <MdNotificationsNone\r\n                  size={25}\r\n                  className=\"text-secondary can-click\"\r\n                  onClick={this.toggleNotificationPopover}\r\n                />\r\n              ) : (\r\n                <MdNotificationsActiveWithBadge\r\n                  size={25}\r\n                  className=\"text-secondary can-click animated swing infinite\"\r\n                  onClick={this.toggleNotificationPopover}\r\n                />\r\n              )}\r\n            </NavLink>\r\n            <Popover\r\n              placement=\"bottom\"\r\n              isOpen={this.state.isOpenNotificationPopover}\r\n              toggle={this.toggleNotificationPopover}\r\n              target=\"Popover1\"\r\n            >\r\n              <PopoverBody>\r\n                <Notifications notificationsData={notificationsData} />\r\n              </PopoverBody>\r\n            </Popover>\r\n          </NavItem> */}\r\n\r\n          <NavItem>\r\n            {/* <NavLink id=\"PopoverFocus\">\r\n              {\r\n                this.state.profileViewData && this.state.profileViewData.image  ? \r\n                <Avatar\r\n                onClick={this.toggleUserCardPopover}\r\n                className=\"can-click\"\r\n                src={this.state.profileViewData && this.state.profileViewData.image}\r\n                />\r\n                : <Avatar\r\n                  onClick={this.toggleUserCardPopover}\r\n                  className=\"can-click\"\r\n                  src={firstProfile}\r\n                />\r\n              }\r\n            </NavLink> */}\r\n            {/* <Popover\r\n              placement=\"bottom-end\"\r\n              isOpen={this.state.isOpenUserCardPopover}\r\n              toggle={this.toggleUserCardPopover}\r\n              target=\"PopoverFocus\"\r\n              trigger=\"focus\" \r\n              className=\"p-0 border-0\"\r\n              style={{ minWidth: 250 }}\r\n            >\r\n              <PopoverBody className=\"p-0 border-light\">\r\n                <UserCard\r\n                  title={this.state.profileViewData && this.state.profileViewData.username}\r\n                  subtitle={this.state.profileViewData && this.state.profileViewData.email}\r\n                  avatar={this.state.profileViewData && this.state.profileViewData.image ? this.state.profileViewData && this.state.profileViewData.image : firstProfile}\r\n                  text=\"\"\r\n                  className=\"border-light\"\r\n                >\r\n                  <ListGroup flush>\r\n                    <ListGroupItem tag=\"button\" action className=\"border-light\">\r\n                    <Link to={'/profile'} className=\"link_clr\"><MdPersonPin /> Profile </Link>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem tag=\"button\" action className=\"border-light\">\r\n                    <Link to={'/change-password'} className=\"link_clr\"><MdVpnKey /> Change Password </Link>\r\n                    </ListGroupItem>\r\n                    \r\n                    <ListGroupItem tag=\"button\" action className=\"border-light\">\r\n                    <Link to={''} onClick={() => this.logOut()} className=\"link_clr\"><MdExitToApp /> Signout </Link>\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                </UserCard>\r\n              </PopoverBody>\r\n            </Popover> */}\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\n// Header.propTypes = {\r\n//   doProfileViewRes: PropTypes.any,\r\n// };\r\n\r\n// const mapStateToProps = createStructuredSelector({\r\n//   doProfileViewRes: doProfileViewRes,\r\n// });\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//   return {\r\n//     ProfileView: (data) => dispatch(ProfileView(data)),\r\n//   };\r\n// }\r\n// const withConnect = connect(mapStateToProps, mapDispatchToProps);\r\n// export default compose(withConnect)(Header);\r\nexport default Header;","export const NOTIFICATION_SYSTEM_STYLE = {\r\n  NotificationItem: {\r\n    DefaultStyle: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n\r\n      borderRadius: '4px',\r\n      fontSize: '14px',\r\n    },\r\n\r\n    success: {\r\n      borderTop: 0,\r\n      backgroundColor: '#45b649',\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0,\r\n    },\r\n\r\n    error: {\r\n      borderTop: 0,\r\n      backgroundColor: '#f85032',\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0,\r\n    },\r\n\r\n    warning: {\r\n      borderTop: 0,\r\n      backgroundColor: '#ffd700',\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0,\r\n    },\r\n\r\n    info: {\r\n      borderTop: 0,\r\n      background: 'linear-gradient(to right, #6a82fb, #fc5c7d)',\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0,\r\n    },\r\n  },\r\n\r\n  Title: {\r\n    DefaultStyle: {\r\n      margin: 0,\r\n      padding: 0,\r\n      paddingRight: 5,\r\n      color: '#fff',\r\n      display: 'inline-flex',\r\n      fontSize: 20,\r\n      fontWeight: 'bold',\r\n      // left: '15px',\r\n      // position: 'absolute',\r\n      // top: '50%',\r\n    },\r\n  },\r\n\r\n  MessageWrapper: {\r\n    DefaultStyle: {\r\n      display: 'block',\r\n      color: '#fff',\r\n      width: '100%',\r\n    },\r\n  },\r\n\r\n  Dismiss: {\r\n    DefaultStyle: {\r\n      display: 'inline-flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      fontFamily: 'inherit',\r\n      fontSize: 20,\r\n      color: '#f2f2f2',\r\n      position: 'relative',\r\n      margin: 0,\r\n      padding: 0,\r\n      background: 'none',\r\n      borderRadius: 0,\r\n      opacity: 1,\r\n      width: 20,\r\n      height: 20,\r\n      textAlign: 'initial',\r\n      float: 'none',\r\n      top: 'unset',\r\n      right: 'unset',\r\n      lineHeight: 'inherit',\r\n    },\r\n  },\r\n\r\n  Action: {\r\n    DefaultStyle: {\r\n      background: '#fff',\r\n      borderRadius: '2px',\r\n      padding: '6px 20px',\r\n      fontWeight: 'bold',\r\n      margin: '10px 0 0 0',\r\n      border: 0,\r\n    },\r\n\r\n    success: {\r\n      backgroundColor: '#45b649',\r\n      color: '#fff',\r\n    },\r\n\r\n    error: {\r\n      backgroundColor: '#f85032',\r\n      color: '#fff',\r\n    },\r\n\r\n    warning: {\r\n      backgroundColor: '#ffd700',\r\n      color: '#fff',\r\n    },\r\n\r\n    info: {\r\n      backgroundColor: '#00c9ff',\r\n      color: '#fff',\r\n    },\r\n  },\r\n\r\n  ActionWrapper: {\r\n    DefaultStyle: {\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n  },\r\n};\r\n","import { Content, Footer, Header, Sidebar } from 'components/Layout';\r\nimport React from 'react';\r\nimport {\r\n  // MdImportantDevices,\r\n  // MdCardGiftcard,\r\n  // MdLoyalty,\r\n} from 'react-icons/md';\r\nimport NotificationSystem from 'react-notification-system';\r\nimport { NOTIFICATION_SYSTEM_STYLE } from 'utils/constants';\r\n\r\nclass MainLayout extends React.Component {\r\n  static isSidebarOpen() {\r\n    return document\r\n      .querySelector('.cr-sidebar')\r\n      .classList.contains('cr-sidebar--open');\r\n  }\r\n\r\n  componentWillReceiveProps({ breakpoint }) {\r\n    if (breakpoint !== this.props.breakpoint) {\r\n      this.checkBreakpoint(breakpoint);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkBreakpoint(this.props.breakpoint);\r\n\r\n    setTimeout(() => {\r\n      if (!this.notificationSystem) {\r\n        return;\r\n      }\r\n\r\n      // this.notificationSystem.addNotification({\r\n      //   // title: <MdImportantDevices />,\r\n      //   message: 'WelCome to Dyonisos Admin!',\r\n      //   level: 'info',\r\n      // });\r\n    }, 1500);\r\n\r\n    // setTimeout(() => {\r\n    //   if (!this.notificationSystem) {\r\n    //     return;\r\n    //   }\r\n\r\n    //   this.notificationSystem.addNotification({\r\n    //     title: <MdLoyalty />,\r\n    //     message:\r\n    //       'Reduction is carefully designed template powered by React and Bootstrap4!',\r\n    //     level: 'info',\r\n    //   });\r\n    // }, 2500);\r\n  }\r\n\r\n  // close sidebar when\r\n  handleContentClick = event => {\r\n    // close sidebar if sidebar is open and screen size is less than `md`\r\n    if (\r\n      MainLayout.isSidebarOpen() &&\r\n      (this.props.breakpoint === 'xs' ||\r\n        this.props.breakpoint === 'sm' ||\r\n        this.props.breakpoint === 'md')\r\n    ) {\r\n      this.openSidebar('close');\r\n    }\r\n  };\r\n\r\n  checkBreakpoint(breakpoint) {\r\n    switch (breakpoint) {\r\n      case 'xs':\r\n      case 'sm':\r\n      case 'md':\r\n        return this.openSidebar('close');\r\n\r\n      case 'lg':\r\n      case 'xl':\r\n      default:\r\n        return this.openSidebar('open');\r\n    }\r\n  }\r\n\r\n  openSidebar(openOrClose) {\r\n    if (openOrClose === 'open') {\r\n      return document\r\n        .querySelector('.cr-sidebar')\r\n        .classList.add('cr-sidebar--open');\r\n    }\r\n    document.querySelector('.cr-sidebar').classList.remove('cr-sidebar--open');\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <main className=\"cr-app bg-light\">\r\n        <Sidebar />\r\n        <Content fluid onClick={this.handleContentClick}>\r\n          <Header />\r\n          {children}\r\n          <Footer />\r\n        </Content>\r\n\r\n        <NotificationSystem\r\n          dismissible={false}\r\n          ref={notificationSystem =>\r\n            (this.notificationSystem = notificationSystem)\r\n          }\r\n          style={NOTIFICATION_SYSTEM_STYLE}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainLayout;\r\n","// import logo200Image from 'assets/img/logo/logo-02.png';\r\nimport sidebarBgImage from 'assets/img/sidebar/sidebar-4.jpg';\r\n// import SourceLink from 'components/SourceLink';\r\nimport React from 'react';\r\n// import { FaGithub } from 'react-icons/fa';\r\nimport { MdDashboard, } from 'react-icons/md';\r\n// MdKeyboardArrowDown, MdGroup, MdEvent, MdPayment\r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n  // UncontrolledTooltip,\r\n  // Collapse,\r\n  Nav,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink as BSNavLink,\r\n} from 'reactstrap';\r\nimport bn from 'utils/bemnames';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst sidebarBackground = {\r\n  backgroundImage: `url(\"${sidebarBgImage}\")`,\r\n  backgroundSize: 'cover',\r\n  backgroundRepeat: 'no-repeat',\r\n};\r\n\r\n// const navComponents = [\r\n//   { to: '/all-events', name: 'All Events', exact: false, },\r\n//   { to: '/create-events', name: 'Create Events', exact: false,},\r\n//   { to: '/past-events', name: 'Past Events', exact: false,},\r\n//   { to: '/upcoming-events', name: 'Upcoming Events', exact: false,},\r\n// ];\r\n\r\n// const navTickets= [\r\n//   { to: '/all-tickets', name: 'All Tickets', exact: false, },\r\n//    { to: '/create-tickets', name: 'Create Tickets', exact: false,},\r\n// ];\r\n\r\n// const navContents = [\r\n//   { to: '/sponsors', name: 'Sponsors', exact: false, Icon: MdGroup },\r\n  \r\n// ];\r\n\r\n// const navPayment = [\r\n  // { to: '/payment', name: 'Payment', exact: false, Icon: MdPayment},\r\n  // { to: '/account-details', name: 'Account Details', exact: false,},\r\n// ];\r\n\r\nconst navItems = [\r\n  { to: '/', name: 'dashboard', exact: true, Icon: MdDashboard },\r\n];\r\n\r\nconst bem = bn.create('sidebar');\r\n\r\nclass Sidebar extends React.Component {\r\n  state = {\r\n    isOpenComponents: false,\r\n    isOpenContents: true,\r\n    isOpenPages: false,\r\n    isOpenPaymentComponents: true\r\n  };\r\n\r\n  handleClick = name => () => {\r\n    this.setState(prevState => {\r\n      const isOpen = prevState[`isOpen${name}`];\r\n\r\n      return {\r\n        [`isOpen${name}`]: !isOpen,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // data-image={sidebarBgImage}\r\n      <aside className={bem.b()} >  \r\n        <div className={bem.e('background')} style={sidebarBackground} />\r\n        <div className={bem.e('content')}>\r\n          <Navbar>\r\n            {/* <SourceLink className=\"navbar-brand d-flex\"> */}\r\n            <div className=\"navbar-brand d-flex\">\r\n              <Link to={'/'}>\r\n                {/* <img src={logo200Image} height=\"50\" alt=\"\" /> */}\r\n                <p className=\"heading\">TEST TASK</p>\r\n              </Link>\r\n              {/* <span className=\"text-white\">\r\n                Reduction <FaGithub />\r\n              </span> */}\r\n            </div>\r\n            {/* </SourceLink> */}\r\n          </Navbar>\r\n          <Nav vertical>\r\n            {navItems.map(({ to, name, exact, Icon }, index) => (\r\n              <NavItem key={index} className={bem.e('nav-item')}>\r\n                <BSNavLink\r\n                  id={`navItem-${name}-${index}`}\r\n                  className=\"text-uppercase fnt_size_sidebar\"\r\n                  tag={NavLink}\r\n                  to={to}\r\n                  activeClassName=\"active\"\r\n                  exact={exact}\r\n                >\r\n                  <Icon className={bem.e('nav-item-icon')} />\r\n                  <span className=\"\">{name}</span>\r\n                </BSNavLink>\r\n              </NavItem>\r\n            ))}\r\n\r\n            {/* <NavItem\r\n              className={bem.e('nav-item')}\r\n              onClick={this.handleClick('Components')}\r\n            >\r\n              <BSNavLink className={bem.e('nav-item-collapse')}>\r\n                <div className=\"d-flex\">\r\n                  <MdEvent className={bem.e('nav-item-icon')} />\r\n                  <span className=\"text-uppercase align-self-start fnt_size_sidebar sidebar_txt_pd\">Events</span>\r\n                </div>\r\n                <MdKeyboardArrowDown\r\n                  className={bem.e('nav-item-icon')}\r\n                  style={{\r\n                    padding: 0,\r\n                    transform: this.state.isOpenComponents\r\n                      ? 'rotate(0deg)'\r\n                      : 'rotate(-90deg)',\r\n                    transitionDuration: '0.3s',\r\n                    transitionProperty: 'transform',\r\n                  }}\r\n                />\r\n              </BSNavLink>\r\n            </NavItem> */}\r\n            {/* <Collapse isOpen={this.state.isOpenComponents}>\r\n              {navComponents.map(({ to, name, exact, Icon }, index) => (\r\n                <NavItem key={index} className={bem.e('nav-item')}>\r\n                  <BSNavLink\r\n                    id={`navItem-${name}-${index}`}\r\n                    className=\"text-uppercase fnt_size_sidebar\"\r\n                    tag={NavLink}\r\n                    to={to}\r\n                    activeClassName=\"active\"\r\n                    exact={exact}\r\n                  >\r\n                    <Icon className={bem.e('nav-item-icon')} />\r\n                    <span className=\"\">-  {name}</span>\r\n                  </BSNavLink>\r\n                </NavItem>\r\n              ))}\r\n            </Collapse> */}\r\n\r\n            {/* <Collapse isOpen={this.state.isOpenContents}>\r\n              {navContents.map(({ to, name, exact, Icon }, index) => (\r\n                <NavItem key={index} className={bem.e('nav-item')}>\r\n                  <BSNavLink\r\n                    id={`navItem-${name}-${index}`}\r\n                    className=\"text-uppercase fnt_size_sidebar\"\r\n                    tag={NavLink}\r\n                    to={to}\r\n                    activeClassName=\"active\"\r\n                    exact={exact}\r\n                  >\r\n                    <Icon className={bem.e('nav-item-icon')} />\r\n                    <span className=\"\">{name}</span>\r\n                  </BSNavLink>\r\n                </NavItem>\r\n              ))}\r\n            </Collapse> */}\r\n\r\n            \r\n\r\n            {/* <NavItem\r\n              className={bem.e('nav-item')}\r\n              onClick={this.handleClick('Pages')}\r\n            >\r\n              <BSNavLink className={bem.e('nav-item-collapse')}>\r\n                <div className=\"d-flex\">\r\n                  <MdEvent className={bem.e('nav-item-icon')} />\r\n                  <span className=\"text-uppercase align-self-start fnt_size_sidebar sidebar_txt_pd\">Tickets</span>\r\n                </div>\r\n                <MdKeyboardArrowDown\r\n                  className={bem.e('nav-item-icon')}\r\n                  style={{\r\n                    padding: 0,\r\n                    transform: this.state.isOpenPages\r\n                      ? 'rotate(0deg)'\r\n                      : 'rotate(-90deg)',\r\n                    transitionDuration: '0.3s',\r\n                    transitionProperty: 'transform',\r\n                  }}\r\n                />\r\n              </BSNavLink>\r\n            </NavItem>\r\n            <Collapse isOpen={this.state.isOpenPages}>\r\n              {navTickets.map(({ to, name, exact, Icon }, index) => (\r\n                <NavItem key={index} className={bem.e('nav-item')}>\r\n                  <BSNavLink\r\n                    id={`navItem-${name}-${index}`}\r\n                    className=\"text-uppercase fnt_size_sidebar\"\r\n                    tag={NavLink}\r\n                    to={to}\r\n                    activeClassName=\"active\"\r\n                    exact={exact}\r\n                  >\r\n                    <span className=\"\">-  {name}</span>\r\n                  </BSNavLink>\r\n                </NavItem>\r\n              ))}\r\n            </Collapse> */}\r\n\r\n            \r\n\r\n\r\n            {/* <NavItem\r\n              className={bem.e('nav-item')}\r\n              onClick={this.handleClick('PaymentComponents')}\r\n            >\r\n              <BSNavLink className={bem.e('nav-item-collapse')}>\r\n                <div className=\"d-flex\">\r\n                  <MdPayment className={bem.e('nav-item-icon')} />\r\n                  <span className=\"text-uppercase align-self-start fnt_size_sidebar sidebar_txt_pd\">Payment</span>\r\n                </div>\r\n                <MdKeyboardArrowDown\r\n                  className={bem.e('nav-item-icon')}\r\n                  style={{\r\n                    padding: 0,\r\n                    transform: this.state.isOpenPaymentComponents\r\n                      ? 'rotate(0deg)'\r\n                      : 'rotate(-90deg)',\r\n                    transitionDuration: '0.3s',\r\n                    transitionProperty: 'transform',\r\n                  }}\r\n                />\r\n              </BSNavLink>\r\n            </NavItem> */}\r\n            {/* <Collapse isOpen={this.state.isOpenPaymentComponents}>\r\n              {navPayment.map(({ to, name, exact, Icon }, index) => (\r\n                <NavItem key={index} className={bem.e('nav-item')}>\r\n                  <BSNavLink\r\n                    id={`navItem-${name}-${index}`}\r\n                    className=\"text-uppercase fnt_size_sidebar\"\r\n                    tag={NavLink}\r\n                    to={to}\r\n                    activeClassName=\"active\"\r\n                    exact={exact}\r\n                  >\r\n                    <Icon className={bem.e('nav-item-icon')} />\r\n                    <span className=\"\">{name}</span>\r\n                  </BSNavLink>\r\n                </NavItem>\r\n              ))}\r\n            </Collapse>             */}\r\n          </Nav>\r\n        </div>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst PageSpinner = ({ color = 'primary' }) => {\r\n  return (\r\n    <div className=\"cr-page-spinner\">\r\n      <Spinner color={color} />\r\n    </div>\r\n  );\r\n};\r\n\r\nPageSpinner.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'warning',\r\n    'info',\r\n    'light',\r\n    'dark',\r\n  ]),\r\n};\r\n\r\nexport default PageSpinner;\r\n","import { MainLayout } from 'components/Layout';\r\nimport PageSpinner from 'components/PageSpinner';\r\n// import AuthPage from 'pages/AuthPage';\r\nimport React from 'react';\r\nimport componentQueries from 'react-component-queries';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport './styles/reduction.scss';\r\n// Prime React CSS\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nconst DashboardPage = React.lazy(() => import('pages/DashboardPage'));\r\nconst StateCollege = React.lazy(() => import('pages/StateCollege'));\r\n\r\n\r\nclass App extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BrowserRouter>\r\n          {/* <GAListener> */}\r\n            <Switch>\r\n              \r\n              {\r\n                localStorage.getItem('auth_token') &&\r\n                <MainLayout breakpoint={this.props.breakpoint}>\r\n                  <React.Suspense fallback={<PageSpinner />}>\r\n                    <Route exact path=\"/\" component={DashboardPage} />\r\n                     <Route exact path=\"/state-college\" component={StateCollege} />\r\n                  </React.Suspense>\r\n                </MainLayout>\r\n              }\r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n          {/* </GAListener> */}\r\n        </BrowserRouter>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst query = ({ width }) => {\r\n  if (width < 575) {\r\n    return { breakpoint: 'xs' };\r\n  }\r\n\r\n  if (576 < width && width < 767) {\r\n    return { breakpoint: 'sm' };\r\n  }\r\n\r\n  if (768 < width && width < 991) {\r\n    return { breakpoint: 'md' };\r\n  }\r\n\r\n  if (992 < width && width < 1199) {\r\n    return { breakpoint: 'lg' };\r\n  }\r\n\r\n  if (width > 1200) {\r\n    return { breakpoint: 'xl' };\r\n  }\r\n\r\n  return { breakpoint: 'xs' };\r\n};\r\n\r\nexport default componentQueries(query)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'sweetalert2/dist/sweetalert2.js';\r\nimport 'sweetalert2/src/sweetalert2.scss';\r\n\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport App from './App';\r\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-4.80d4a4e5.jpg\";"],"sourceRoot":""}